// <auto-generated />
using System;
using Codedy.StarSecurity.WebApp.Models.Database.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Codedy.StarSecurity.WebApp.Migrations
{
    [DbContext(typeof(StarSecurityDbContext))]
    [Migration("20210314180549_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Codedy.StarSecurity.WebApp.Models.Database.Entities.Career", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("WorkAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Careers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f58c0412-8400-412b-801b-06b6090e67d3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Absolutely safe protection for customers during working time by all measures",
                            ExpirationDate = new DateTime(2021, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 500m,
                            Title = "Guard",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0,
                            WorkAddress = "Ha Noi"
                        },
                        new
                        {
                            Id = new Guid("5bd5f5d8-4899-4e4f-844c-ffd0ba71683e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Securely transfer cash and valuables, replenish ATM,warehouse and handling, multi-point collection",
                            ExpirationDate = new DateTime(2021, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 500m,
                            Title = "Cash teller",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0,
                            WorkAddress = "Ha Noi"
                        },
                        new
                        {
                            Id = new Guid("14323e88-8116-4231-a6d5-3703c1535108"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Independent business investigation, providing information in the field of Marriage - Economics - Civil under Enterprise Law. Find people, monitor supervision, verify relatives",
                            ExpirationDate = new DateTime(2021, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 500m,
                            Title = "Emissary",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0,
                            WorkAddress = "Ha Noi"
                        },
                        new
                        {
                            Id = new Guid("f3470a7b-062f-4c7e-8d57-cf67dbbdf636"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Design, installation and maintenance of access control system, CCTV, fire alarm system, fire prevention system, intrusion / theft alarm, belt protection system, etc. customer base.",
                            ExpirationDate = new DateTime(2021, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Salary = 500m,
                            Title = "Network security staff",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0,
                            WorkAddress = "Ha Noi"
                        });
                });

            modelBuilder.Entity("Codedy.StarSecurity.WebApp.Models.Database.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("Date");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirtName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd555925-5f29-4ad3-9323-47fa8b3838a4"),
                            Address = "Nhon,Ha Noi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(2000, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "chanhoa@gmail.com",
                            FirtName = "Chan Hoa",
                            Gender = 1,
                            LastName = "Do",
                            Phone = "0981159826",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("ba42e262-948d-4c60-ac0a-24b4cc32af9c"),
                            Address = "My Dinh,Ha Noi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(1998, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "thanhtu@gmail.com",
                            FirtName = "Thanh Tu",
                            Gender = 0,
                            LastName = "Truong",
                            Phone = "0981159826",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("9d381895-3b23-4def-a851-1f296a863ca8"),
                            Address = "My Dinh,Ha Noi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(2001, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "tuan@gmail.com",
                            FirtName = "Tuan",
                            Gender = 0,
                            LastName = "Pham",
                            Phone = "0981159826",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("e5c9a908-11df-4922-b27d-9a2cfd10c4e0"),
                            Address = "My Dinh,Ha Noi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(2001, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "quanghuy@gmail.com",
                            FirtName = "Quang Huy",
                            Gender = 0,
                            LastName = "Vu",
                            Phone = "0981159826",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("6fbf38b7-5671-49c8-b622-ae56f07d7d60"),
                            Address = "My Dinh,Ha Noi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(1996, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "dinhhieu@gmail.com",
                            FirtName = "Dinh Hieu",
                            Gender = 0,
                            LastName = "Nguyen",
                            Phone = "0981159826",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("e1a0f991-4b21-429e-8131-719d7b2b690f"),
                            Address = "Dong Da,Ha Noi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(1995, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "vanduc@gmail.com",
                            FirtName = "Van Duc",
                            Gender = 0,
                            LastName = "Nguyen",
                            Phone = "0981159826",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("bab0201c-bb95-4423-b34d-85c6d99c3488"),
                            Address = "Nhon,Ha Noi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(2002, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "huyentrang@gmail.com",
                            FirtName = "Huyen Trang",
                            Gender = 1,
                            LastName = "Do",
                            Phone = "0981159826",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("f1724618-d229-4e4f-b226-7f7b294a9224"),
                            Address = "Ba Vi, Ha Noi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(2000, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "Thanhhoa@gmail.com",
                            FirtName = "Thanh Hoa",
                            Gender = 1,
                            LastName = "Nguyen",
                            Phone = "0981159826",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("802a2ff6-9fa8-4ebf-89ee-215f210eac00"),
                            Address = "Tay Son,Ha Noi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "vana@gmail.com",
                            FirtName = " Van A",
                            Gender = 0,
                            LastName = "Nguyen",
                            Phone = "0981159826",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("1923f274-426f-46e1-bc42-2d16747437ff"),
                            Address = "Cau Giay,Ha Noi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(1994, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "phuongthuy@gmail.com",
                            FirtName = "Phuong Thuy",
                            Gender = 1,
                            LastName = "Phung",
                            Phone = "0981159826",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0
                        });
                });

            modelBuilder.Entity("Codedy.StarSecurity.WebApp.Models.Database.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Codedy.StarSecurity.WebApp.Models.Database.Entities.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool?>("IsFeatured")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PromotionPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1458aa9a-4398-4828-a451-d42467bfef94"),
                            CategoryId = 0,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "The service portfolio of this division includes guarding, fire squad, dog squad, bodyguards etc. for industries, banks, retail outlets, residential colonies, hotels and institutions.",
                            Image = "manned-guarding .jpg",
                            IsActive = true,
                            Price = 500m,
                            PromotionPrice = 499m,
                            Title = "Manned guarding  ",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("b8434194-a6a7-4dc7-a75d-76893bc3d2da"),
                            CategoryId = 0,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "DEATH INVESTIGATION - MONITORING,MONITOR YOUR CHILDREN, INVESTIGATION INVESTIGATION, INVESTIGATION INVESTIGATION - DISABILITY, SEARCH DNA TRACK, PHONE NUMBER INVESTIGATION.Professional detective team, well-trained and with professional ethics, complete and sophisticated equipment system with the most modern and advanced technology today.",
                            Image = "investigations.jpg",
                            IsActive = true,
                            Price = 300m,
                            PromotionPrice = 299m,
                            Title = "Investigations",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("1d4110dc-1883-4e96-b695-a1f55daddba1"),
                            CategoryId = 0,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "This division works in close association with SIS's strategic partners i.e. reputed system integrators & installers. The primary area of activity for this division is design, installation and maintenance of Access control systems, CCTVs, fire alarm systems, fire suppression systems, intruder/burglar alarms, perimeter protection systems, etc. The division aims at marketing its products to the existing customer base. .",
                            Image = "electronic security systems .jpg",
                            IsActive = true,
                            Price = 400m,
                            PromotionPrice = 399m,
                            Title = "Electronic security systems ",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("2599d241-1f72-44b0-9e5f-cedee1ed4ba2"),
                            CategoryId = 0,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "The service range of the Cash Services division includes secured transfer of cash and valuables, ATM replenishment, Vaulting and Processing Services, multi-point cash collection and Caretaker Services.",
                            Image = "cash-services .jpg",
                            IsActive = true,
                            Price = 250m,
                            PromotionPrice = 200m,
                            Title = "Cash services ",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Version = 0
                        });
                });

            modelBuilder.Entity("Codedy.StarSecurity.WebApp.Models.Database.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("Date");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeAchievements")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeDepartment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmployeeEducationalQualification")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmployeeGrade")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmployeeRole")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirtName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("Date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Admin");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5139dbf8-9410-4144-8bf1-78cae007ed51"),
                            AccessFailedCount = 0,
                            Address = "Xuan Loc, Nghe An",
                            ConcurrencyStamp = "a68310e3-1c2d-4539-b1f8-4f4c377041aa",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(1996, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "nguyendinhhieu@gmail.com",
                            EmailConfirmed = false,
                            EmployeeAchievements = "the first prize in the singing contest of the room",
                            EmployeeCode = "H123",
                            EmployeeDepartment = "Technical staff",
                            EmployeeEducationalQualification = "University",
                            EmployeeGrade = "level 5 staff",
                            EmployeeRole = "Leader",
                            FirtName = "Dinh Hieu",
                            Gender = 0,
                            LastLoginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nguyen ",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEGlflPWSTiCvm1fSAy509noYp0PvW5tF0aQjUdnX3KWxsdUREFnaWGTB59rICxe7tw==",
                            Phone = "98372837362",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "nguyendinhhieu",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("ddadf25d-9968-4766-aa78-608d52f631b9"),
                            AccessFailedCount = 0,
                            Address = "Thuy Bieu, Hue",
                            ConcurrencyStamp = "65c6e42e-94ca-41d6-bce5-095efa5d2d77",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(1998, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "truongthanhtu@gmail.com",
                            EmailConfirmed = false,
                            EmployeeAchievements = "the first prize in the singing contest of the room",
                            EmployeeCode = "T123",
                            EmployeeDepartment = "Technical staff",
                            EmployeeEducationalQualification = "University",
                            EmployeeGrade = "level 5 staff",
                            EmployeeRole = "Leader",
                            FirtName = "Thanh Tu",
                            Gender = 0,
                            LastLoginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Truong ",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEHPDoXGad4968HHZNSTeP9TiYfLqoG0pPFDCdggVgka15YcD3QwxJMjZR96ZDEzFLQ==",
                            Phone = "0367376544",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "truongthanhtu",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("a2183c7c-3a09-47f5-865d-1ebb9ae52a1f"),
                            AccessFailedCount = 0,
                            Address = "My Dinh, Ha Noi",
                            ConcurrencyStamp = "7c9b818c-76e1-4cf5-b665-23395f1b917c",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(2001, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "phamtuan@gmail.com",
                            EmailConfirmed = false,
                            EmployeeAchievements = "the first prize in the singing contest of the room",
                            EmployeeCode = "T1234",
                            EmployeeDepartment = "Technical staff",
                            EmployeeEducationalQualification = "University",
                            EmployeeGrade = "level 5 staff",
                            EmployeeRole = "Leader",
                            FirtName = "Pham",
                            Gender = 0,
                            LastLoginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Tuan",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEAnEUTZuEy5FyYDPU58jq7Qf3zxv99BCWUfNrgdVsWS6glmrcu5KI06Vszbqs/vLeg==",
                            Phone = "0382548442",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "phamtuan",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("562548c6-88b4-4d1e-bcb8-ad49078ed896"),
                            AccessFailedCount = 0,
                            Address = "My Dinh, Ha Noi",
                            ConcurrencyStamp = "afc3910f-1372-42ab-94ce-91ab48355d41",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(2001, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "vuquanghuy@gmail.com",
                            EmailConfirmed = false,
                            EmployeeAchievements = "the first prize in the singing contest of the room",
                            EmployeeCode = "H1234",
                            EmployeeDepartment = "Technical staff",
                            EmployeeEducationalQualification = "University",
                            EmployeeGrade = "level 5 staff",
                            EmployeeRole = "Leader",
                            FirtName = "Quang Huy",
                            Gender = 0,
                            LastLoginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vu",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEC9yulXG1CRsAVbt+e7wT6Hqe3XpbYWbvQ7BqyqSw+YaBytIKPTVxqgLeRqvR4kQHA==",
                            Phone = "0964576059",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "vuquanghuy",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("4aebade0-fe97-4d9c-9172-7ff132f98c7c"),
                            AccessFailedCount = 0,
                            Address = "Bac Tu Liem, Ha Noi",
                            ConcurrencyStamp = "3e8f279f-7bf7-4723-af3b-855a1316f54c",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(2000, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "chanhoa@gmail.com",
                            EmailConfirmed = false,
                            EmployeeAchievements = "the first prize in the singing contest of the room",
                            EmployeeCode = "H12345",
                            EmployeeDepartment = "Technical staff",
                            EmployeeEducationalQualification = "University",
                            EmployeeGrade = "level 5 staff",
                            EmployeeRole = "Leader",
                            FirtName = "Chan Hoa",
                            Gender = 1,
                            LastLoginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Do",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEPDxGqYFXyDK9T6mLPN7kuWtp42ZB8g1Dx9C87K0GPjYjEqc20gFO4CijfDMvpk8rw==",
                            Phone = "0981159826",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "dothichanhoa",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("6c2661f1-e224-42e1-89f5-679690270fb7"),
                            AccessFailedCount = 0,
                            Address = "Nam Tu Liem, Ha Noi",
                            ConcurrencyStamp = "5a9335b9-ab1f-4668-8e34-f2e979d64b0f",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(2000, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "Admin@gmail.com",
                            EmailConfirmed = false,
                            EmployeeAchievements = "the first prize in the singing contest of the room",
                            EmployeeCode = "A12345",
                            EmployeeDepartment = "Technical staff",
                            EmployeeEducationalQualification = "University",
                            EmployeeGrade = "level 5 staff",
                            EmployeeRole = "Leader",
                            FirtName = "Admin",
                            Gender = 1,
                            LastLoginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Admin",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEN+F06M2fWRyMN7DFoJ9MEBa4KSo+Wf12qynlV9FEolp1ET/xR17xHjxYwUZy8JOjg==",
                            Phone = "0981159826",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Admin",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("383d5fe5-e255-4cdf-9589-dff92df193c8"),
                            AccessFailedCount = 0,
                            Address = "Dong Da, Ha Noi",
                            ConcurrencyStamp = "40d8d190-13ad-4219-b774-f5a409297d16",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(1999, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "Host@gmail.com",
                            EmailConfirmed = false,
                            EmployeeAchievements = "the first prize in the singing contest of the room",
                            EmployeeCode = "H123456",
                            EmployeeDepartment = "Technical staff",
                            EmployeeEducationalQualification = "University",
                            EmployeeGrade = "level 5 staff",
                            EmployeeRole = "Leader",
                            FirtName = "Host",
                            Gender = 1,
                            LastLoginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Host",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEOdCZrZrA4NNNYmZCzTqrGD53XpbmFMyF5BrrnuAcUYFDmNjk/x8fG2kzamJuNiPeg==",
                            Phone = "0981159826",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Host",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("49b23d38-8e90-474e-8a46-63129cfbaa56"),
                            AccessFailedCount = 0,
                            Address = "Ba Dinh, Ha Noi",
                            ConcurrencyStamp = "cce9292c-cdd8-4462-a9f2-e18b2e702c9c",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOB = new DateTime(1999, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "Employee@gmail.com",
                            EmailConfirmed = false,
                            EmployeeAchievements = "the first prize in the singing contest of the room",
                            EmployeeCode = "E123456",
                            EmployeeDepartment = "Technical staff",
                            EmployeeEducationalQualification = "University",
                            EmployeeGrade = "level 5 staff",
                            EmployeeRole = "Leader",
                            FirtName = "Employee",
                            Gender = 1,
                            LastLoginDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Employee",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEJ0iYepeVWYDQoWOaFjlE6DjjE5IBZzs69c7YFnBPowqJxx/3wT01KSSn3qkSf4rkA==",
                            Phone = "0981159826",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Employee",
                            Version = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
